####################################################################################################
# The role of this workflow is to push the application to the staging
# server, which is a VPS.
#
# This workflow will be triggered on every push to the main branch (which is protected)
#
# This workflow do not run tests, as if a push is made to the main branch, it means that
# the tests have already been run and passed.
####################################################################################################

name: deploy-to-vps
run-name: "Deploy React app to VPS"

on:
  push:
    branches:
      - main

env:
  APP_PATH: /home/quentin/Quentin-Desmettre
  REPO_URL: git@github.com:Quentin-Desmettre/Quentin-Desmettre.github.io.git

jobs:
  deploy:
    name: "Deploy React App to staging server"
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH
        run: |
          ls
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.STAGING_SSH_USER }}
          SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
          SSH_HOST: ${{ secrets.STAGING_SSH_HOST }}

      - name: Pull the source code on the server
        run: ssh staging '(cd ${{ env.APP_PATH }} || (git clone ${{ env.REPO_URL }} ${{ env.APP_PATH }} && cd ${{ env.APP_PATH }})) && git fetch && git reset --hard origin/main)'

      - name: Restart the app
        run: ssh staging 'cd ${{ env.APP_PATH }} && docker compose down --remove-orphans && docker-compose up --build -d front-prod'
